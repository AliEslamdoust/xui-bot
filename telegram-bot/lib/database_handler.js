const{keys:a}=Object;var b=require('./log_handler'),c=require('sqlite3').verbose(),d=require('fs'),e=require('js-yaml'),f=require('path'),g=f.join('/root/telegram-bot/db/config.yaml');let h;try{h=e.load(d.readFileSync(g));b.log('yamlData was loaded successfully','INFO')}catch(A){b.log(A,'ERROR')}var i=new c.Database(f.join(h.xui_database), _=>{_?b.log(_,'ERROR'):b.log('connected to database','INFO')});async function j(B,C){let _c=!0;let D='';try{for(let _a in a(B)){var E=a(B)[_a],F=B[E];_a!=0&&(D+=` ${F[1]} `);D+=isNaN(E)?`${E} = \"${F[0]}\"`:`${E} = ${F[0]}`;F[0]===''&&(D+=`\"\"`)}data=await new Promise((_A,_b)=>i.get(`SELECT * FROM ${C} WHERE ${D}`,[],(aA,_B)=>aA?(b.log(aA,'ERROR'),_c=!1,_b(aA)):(_A(_B))))}catch(aB){b.log(aB,'ERROR');_c=!1;data=null}finally{return{ok:_c,data}}}async function k(aC,aD){let _C=!0;let _d='';try{for(let aE in a(aC)){var _e=a(aC)[aE],_f=aC[_e];aE!=0?_d+=` ${_f[1]} `:_d='WHERE ';_d+=isNaN(_e)?`${_e} = \"${_f[0]}\"`:`${_e} = ${_f[0]}`;_f[0]===''&&(_d+=`\"\"`)}data=await new Promise((aF,aG)=>i.all(`SELECT * FROM ${aD} ${_d}`,[],(aH,aI)=>aH?(b.log(aH,'ERROR'),_C=!1,aG(aH)):(aF(aI))))}catch(aJ){b.log(aJ,'ERROR');_C=!1;data=null}finally{return{ok:_C,data}}}async function l(aK,aL,aM){let _D=!0;let _E='';let _F='';try{for(let aN in a(aK)){var G=a(aK)[aN],H=aK[G];aN!=0&&(_E+=` ${H[1]} `);_E+=isNaN(G)?`${G} = \"${H[0]}\"`:`${G} = ${H[0]}`;H[0]===''&&(_E+=`\"\"`)}for(let aO in a(aL)){const aP=a(aL)[aO],aQ=aL[aP];aO!=0&&(_F+=', ');_F+=isNaN(aP)?`${aP} = \"${aQ}\"`:`${aP} = ${aQ}`;aQ===''&&(_F+=`\"\"`)}data=await new Promise((aR,aS)=>i.run(`UPDATE ${aM} SET ${_F} WHERE ${_E}`,[],aT=>aT?(b.log(aT,'ERROR'),_D=!1,aS(aT)):(aR('success'))))}catch(aU){b.log(aU,'ERROR');_D=!1;data=null}finally{return{ok:_D,data}}}async function m(aV,aW){let aX=!0;let aY='';let aZ='';try{for(let bB in a(aV)){var bA=a(aV)[bB],_g=aV[bA];bB!=0&&(aY+=', ',aZ+=', ');aY+=bA;aZ+=isNaN(_g)?`\"${_g}\"`:_g;_g===''&&(aZ+=`\"\"`)}data=await new Promise((bC,bD)=>i.run(`INSERT INTO ${aW} (${aY}) VALUES (${aZ})`,[],bE=>bE?(b.log(bE,'ERROR'),aX=!1,bD(bE)):(bC('success'))))}catch(bF){b.log(bF,'ERROR');aX=!1;data=null}finally{return{ok:aX,data}}}async function n(bG){let bH,bI;try{bI=await new Promise((bJ,bK)=>i.all(`SELECT * FROM subscriptions WHERE users_id LIKE '%${bG}%'`,[],(bL,bM)=>bL?(b.log(bL,'ERROR'),bH=!1,bK(bL)):(bH=!0,bJ(bM))))}catch(bN){b.log(bN,'ERROR');bH=!1;bI=null}finally{return{ok:bH,data:bI}}}async function o(bO,bP){let bQ=await j({userid:[bO]},'users');let bR=bQ.data.balance;let bS='error in changing users balance';let bT=!1;let _G=parseInt(eval(bR+bP)).toFixed(0);try{await new Promise((bU,bV)=>i.run('UPDATE users SET balance = ? WHERE userid = ?',[_G,bO],bW=>{bW?(b.log(bW,'WARN'),bS=bW.message,bV(bW)):(bS='success',bT=!0,bU(bS))}))}catch(bX){b.log(bX,'ERROR')}finally{return{ok:bT,msg:bS}}}async function p(bY,bZ){let cA,cB,cC;try{let cD=await j({code:[bZ]},'gifts');cD=cD.data;let cE=cD.expiration;let cF=cD.users_id.split('/');cF.pop();let cG=Date.now();if(cD.enable==0){cB='This gift is not available anymore';cA=!1;cC=404;throw error}else if(cF.length>=cD.limit||(cE!=0&&cE<=cG)){cA=!1;cB='Code has expired';cC=401;await l({code:[bZ]},{enable:0},'gifts')}else{let cH=cD.users_id+bY+'/';await o(bY,cD.prize);await l({code:[bZ]},{users_id:cH},'gifts');cA=!0;cB='Gift applied';cC=200}}catch(cI){cA=!1;cB=cI;cC=500;b.log(cI,'ERROR')}finally{return{ok:cA,msg:cB,code:cC}}}module.exports={getFullRow:j,getAllRows:k,updateFullRow:l,changeUserBalance:o,insertFullRow:m,getUserSubs:n,useGift:p};
